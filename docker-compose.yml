#docker-compose -f docker-compose.yml up --force-recreate --build --remove-orphans
version: "3.3"
volumes:
  sbkanap-kafka-data:
  sbkanap-postgres-data:
services:
  #postgres:
  #  container_name: postgres-sbkanap-int-test
  #  image: docker.io/postgres:12
  #  environment:
  #    - POSTGRES_USER=sbkanap
  #    - POSTGRES_PASSWORD=sbkanap
  #    - POSTGRES_DB=sbkanap
  #    - PGPORT=5432
  #  volumes:
  #    - sbkanap-postgres-data:/var/lib/postgresql
  #  ports:
  #    - "5432:5432"
  #  healthcheck:
  #    test: [ "CMD-SHELL", "pg_isready" ]
  #    interval: 10s
  #    timeout: 5s
  #    retries: 5
  kafka:
    container_name: sbkanap-kafka
    image: docker.io/bitnami/kafka:3.2.3
    ports:
      - "9094:9094"
    volumes:
      - sbkanap-kafka-data:/bitnami/kafka/data
    environment:
      #- BITNAMI_DEBUG=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://kafka:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  sbkanap:
    image: springboot-kafka-native-poc:0.0.2-SNAPSHOT
    platform: linux/amd64
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - kafka
    environment:
      - sbkanap.kafka-bootstrap-server=http://kafka:9092